plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId "com.pabloperotti.android.tools.log.client"
            artifactId "android-logger-client"
            version "0.0.3"
            artifact "$projectDir/client/build/outputs/aar/client-release.aar"

            pom {
                withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')

                    project.configurations.implementation.allDependencies.each {
                        if (it.group != null || it.name != null || it.version != null || it.name == "unspecified") return

                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/pperotti/android-logger-client")
            credentials {
                username = project.findProperty("github_username") ?: System.getenv("USERNAME")
                password = project.findProperty("github_publish_token") ?: System.getenv("TOKEN")
            }
        }
    }
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.pabloperotti.android.tools.log.client"
        minSdk 27
        targetSdk 31
        versionCode 1
        versionName "0.0.3"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        create("release") {
            storeFile = file("store/my-release-key.jks")
            storePassword = "password"
            keyAlias = "my-alias"
            keyPassword = "password"
        }
    }

    buildTypes {
        getByName("release") {
            minifyEnabled false
            signingConfig = signingConfigs.getByName("release")
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}